{"version":3,"sources":["About.tsx","components/Container/Container.tsx","components/Transitions/TransitionApplier.tsx","components/Transitions/Fade.tsx","Contact.tsx","components/Card/Card.tsx","components/Card/CardHeader.tsx","components/Card/CardFigure.tsx","components/Card/CardContent.tsx","components/LoadingIcon/LoadingIcon.tsx","Projects.tsx","components/Menu/IconMenu.tsx","components/Menu/Nav.tsx","components/Menu/NavLink.tsx","components/Menu/TextMenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Article","styled","article","_templateObject","Title","h2","_templateObject2","About","react_default","a","createElement","Container","div","Container_templateObject","props","gridTemplateColumns","TransitionApplier","_ref","children","Object","objectWithoutProperties","Fragment","map","child","index","CSSTransition","assign","key","Fade","Fade_templateObject","Contact_templateObject","Contact_templateObject2","Contact","Contact_Article","Contact_Title","href","Card","section","Card_templateObject","CardSubtitle","h4","CardHeader_templateObject","CardTitle","h3","CardHeader_templateObject2","Header","header","_templateObject3","CardHeader","title","subtitle","headerProps","figure","CardFigure_templateObject","CardContent_templateObject","DashKeyframe","keyframes","LoadingIcon_templateObject","RotateKeyframe","LoadingIcon_templateObject2","Loader","LoadingIcon_templateObject3","SvgCircular","svg","_templateObject4","CirclePath","circle","_templateObject5","color","LoadingIcon","_ref$color","react","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","Projects_templateObject","Projects_templateObject2","StyledCardTitle","Projects_templateObject3","StyledContainer","Projects_templateObject4","Projects","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","repositories","wrap","_context","prev","next","Axios","get","sent","data","setState","stop","render","Projects_Article","Projects_Title","state","length","LoadingIcon_LoadingIcon","repository","id","CardHeader_CardHeader","name","as","description","inherits","React","Component","IconMenu","ul","IconMenu_templateObject","Nav","nav","Nav_templateObject","NavLink","Link","NavLink_templateObject","TextMenu","TextMenu_templateObject","App_templateObject","Name","h1","App_templateObject2","Profession","App_templateObject3","Presentation","App_templateObject4","App","changeContent","e","eventTarget","target","closeContent","showContent","lastEventTargetClicked","prevState","resizePresentation","App_StyledContainer","react_router_dom","TransitionApplier_TransitionApplier","in","timeout","classNames","enter","exit","react_router","path","component","className","to","onClick","undefined","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sfAGA,IAAMA,EAAUC,IAAOC,QAAVC,KAOPC,EAAQH,IAAOI,GAAVC,KAKEC,EAAkB,kBAC3BC,EAAAC,EAAAC,cAACV,EAAD,KACIQ,EAAAC,EAAAC,cAACN,EAAD,cACAI,EAAAC,EAAAC,cAAA,yVCZD,IAAMC,EAAYV,IAAOW,IAAVC,IAEO,SAAAC,GAAK,OAAiC,MAA7BA,EAAMC,oBAA8B,kBAAoBD,EAAMC,sCCAvFC,EAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAaJ,EAAhBK,OAAAC,EAAA,EAAAD,CAAAF,EAAA,qBAC/BT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAY,SAAA,KACGH,EAASI,IAAI,SAACC,EAAOC,GAAR,OACZhB,EAAAC,EAAAC,cAACe,EAAA,EAADN,OAAAO,OAAA,CACEC,IAAKH,GACDV,GAEHS,0TCbF,IAAMK,EAAO3B,IAAOW,IAAViB,2OCCjB,IAAM7B,EAAUC,IAAOC,QAAV4B,KAOP1B,EAAQH,IAAOI,GAAV0B,KAKEC,EAAoB,kBAC7BxB,EAAAC,EAAAC,cAACuB,EAAD,KACIzB,EAAAC,EAAAC,cAACwB,EAAD,gBACA1B,EAAAC,EAAAC,cAAA,oDAA2CF,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,gCAAR,yBAA3C,kNChBD,IAAMC,EAAOnC,IAAOoC,QAAVC,uTCMV,IAAMC,EAAetC,IAAOuC,GAAVC,KAMZC,EAAYzC,IAAO0C,GAAVC,KAIhBC,EAAS5C,IAAO6C,OAAVC,KAICC,EAAa,SAAClC,GAAkB,IACnCmC,EAAoCnC,EAApCmC,MAAOC,EAA6BpC,EAA7BoC,SAAaC,EADehC,OAAAC,EAAA,EAAAD,CACCL,EADD,sBAG3C,OACEN,EAAAC,EAAAC,cAACmC,EAAWM,EACTF,GAASzC,EAAAC,EAAAC,cAACgC,EAAD,KAAYO,GACrBC,GAAY1C,EAAAC,EAAAC,cAAC6B,EAAD,KAAeW,GAC3BC,EAAYjC,sIC3BOjB,IAAOmD,OAAVC,yHCAIpD,IAAOW,IAAV0C,wlCCKxB,IAAMC,EAAeC,YAAHC,KAeZC,GAAiBF,YAAHG,KAMdC,GAAS3D,IAAOW,IAAViD,KAWNC,GAAc7D,IAAO8D,IAAVC,IACFN,IAYTO,GAAahE,IAAOiE,OAAVC,IAGDZ,EACH,SAAAzC,GAAK,OAAIA,EAAMsD,QAQdC,GAAc,SAAApD,GAAA,IAAAqD,EAAArD,EAAGmD,aAAH,IAAAE,EAAW,UAAXA,EAAA,OACzBC,EAAA,cAACX,GAAD,KACEW,EAAA,cAACT,GAAD,CACEU,QAAQ,eAERD,EAAA,cAACN,GAAD,CACEG,MAAOA,EACPK,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,YAAY,IACZC,iBAAiB,6aCvDzB,IAAM9E,GAAUC,IAAOC,QAAV6E,MAOP3E,GAAQH,IAAOI,GAAV2E,MAKLC,GAAkBhF,YAAOyC,EAAPzC,CAAHiF,MAIfC,GAAkBlF,YAAOU,EAAPV,CAAHmF,MAIRC,GAAb,SAAAC,GACE,SAAAD,EAAYvE,GAAY,IAAAyE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,KAAAJ,IACtBE,EAAApE,OAAAuE,EAAA,EAAAvE,CAAAsE,KAAAtE,OAAAwE,EAAA,EAAAxE,CAAAkE,GAAAO,KAAAH,KAAM3E,KAKR+E,kBANwB1E,OAAA2E,EAAA,EAAA3E,CAAA4E,EAAAtF,EAAAuF,KAMJ,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAtF,EAAA2F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACKC,IAAMC,IAAmB,gDAD9B,OACZP,EADYG,EAAAK,KAEZP,EAAeD,EAASS,KAE9BpB,EAAKqB,SAAS,CAAET,iBAJE,wBAAAE,EAAAQ,SAAAZ,MANIV,EAaxBuB,OAAS,kBACPtG,EAAAC,EAAAC,cAACqG,GAAD,KACEvG,EAAAC,EAAAC,cAACsG,GAAD,iBACoC,IAAnCzB,EAAK0B,MAAMd,aAAae,QAAgB1G,EAAAC,EAAAC,cAACyG,GAAD,MAEzC3G,EAAAC,EAAAC,cAACyE,GAAD,CAAiBpE,oBAAoB,kBAClCwE,EAAK0B,MAAMd,aAAa7E,IAAI,SAAC8F,GAAD,OAC3B5G,EAAAC,EAAAC,cAAC0B,EAAD,CAAMT,IAAKyF,EAAWC,IACpB7G,EAAAC,EAAAC,cAAC4G,EAAD,KACE9G,EAAAC,EAAAC,cAACuE,GAAD,KAAkBmC,EAAWG,MAC7B/G,EAAAC,EAAAC,cAAC6B,EAAD,CAAciF,GAAG,KAAKJ,EAAWK,oBApB3ClC,EAAK0B,MAAQ,CAAEd,aAAc,IAHPZ,EAD1B,OAAApE,OAAAuG,EAAA,EAAAvG,CAAAkE,EAAAC,GAAAD,EAAA,CAA8BsC,IAAMC,oPCtC7B,IAAMC,GAAW5H,IAAO6H,GAAVC,oQCDd,IAAMC,GAAM/H,IAAOgI,IAAVC,scCKT,IAAMC,GAAUlI,YAAOmI,IAAPnI,CAAHoI,iICLb,IAAMC,GAAWrI,IAAO6H,GAAVS,izCCiBrB,IAAMpD,GAAkBlF,YAAOU,EAAPV,CAAHuI,MAIfC,GAAOxI,IAAOyI,GAAVC,MAoBJC,GAAa3I,IAAOI,GAAVwI,MAgCVC,GAAe7I,IAAOC,QAAV6I,MAoFHC,eA5Eb,SAAAA,EAAYlI,GAAY,IAAAyE,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,KAAAuD,IACtBzD,EAAApE,OAAAuE,EAAA,EAAAvE,CAAAsE,KAAAtE,OAAAwE,EAAA,EAAAxE,CAAA6H,GAAApD,KAAAH,KAAM3E,KASRmI,cAAgB,SAACC,GACf,IAAMC,EAAcD,EAAEE,OAChBC,EAAe9D,EAAK0B,MAAMqC,aAAe/D,EAAK0B,MAAMsC,yBAA2BJ,EAErF5D,EAAKqB,SAAS,SAAC4C,GAAD,MACX,CAAEF,aAAcE,EAAUF,YAAaC,uBAAwBJ,IAChE,WAAQ5D,EAAKqB,SAAS,CAAE0C,aAAcD,EAAcI,oBAAqBJ,OAhBrD9D,EAoBxBuB,OAAS,kBACPtG,EAAAC,EAAAC,cAACgJ,GAAD,CAAiB3I,oBAAoB,YACnCP,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAACoI,GAAD,KACEtI,EAAAC,EAAAC,cAACkJ,EAAD,CACEC,GAAItE,EAAK0B,MAAMwC,mBACfK,QAAS,EACTC,WAAW,oBAEXvJ,EAAAC,EAAAC,cAAC+H,GAAD,yBACAjI,EAAAC,EAAAC,cAACkI,GAAD,4BAGFpI,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEoI,GAAItE,EAAK0B,MAAMqC,YACfQ,QAAS,CAAEE,MAAO,IAAKC,KAAM,GAC7BF,WAAW,QAEXvJ,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACE1J,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW7J,IAChCC,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWpI,IAClCxB,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAW/E,SAM3C7E,EAAAC,EAAAC,cAACsH,GAAD,KACExH,EAAAC,EAAAC,cAACmH,GAAD,KACErH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,wCAAwCiH,OAAO,UACrD5I,EAAAC,EAAAC,cAAA,QAAM2J,UAAU,oBAGpB7J,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,+BAA+BiH,OAAO,UAC5C5I,EAAAC,EAAAC,cAAA,QAAM2J,UAAU,kBAGpB7J,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,gCACN3B,EAAAC,EAAAC,cAAA,QAAM2J,UAAU,kBAItB7J,EAAAC,EAAAC,cAAC4H,GAAD,KACE9H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyH,GAAD,CAASmC,GAAG,SAASC,QAAShF,EAAK0D,eAAnC,aACJzI,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyH,GAAD,CAASmC,GAAG,YAAYC,QAAShF,EAAK0D,eAAtC,aACJzI,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyH,GAAD,CAASmC,GAAG,WAAWC,QAAShF,EAAK0D,eAArC,iBAlEZ1D,EAAK0B,MAAQ,CACXqC,aAAa,EACbG,oBAAoB,EACpBF,4BAAwBiB,GANJjF,6BADRoC,IAAMC,iBCtEJ6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAShE,OAAOtG,EAAAC,EAAAC,cAACqK,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.67277efe.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  margin: 30px 0;\r\n  p {\r\n    margin: 0 0 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const About: React.FC = () =>\r\n    <Article>\r\n        <Title>About</Title>\r\n        <p>I'm a Software Developer currently working mainly with .NET tecnologies, focused in web based solutions.</p>\r\n    </Article>","import styled from 'styled-components';\r\n\r\ninterface IProps extends React.HTMLAttributes<any> {\r\n    gridTemplateColumns?: string;\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n    display: grid;\r\n    grid-template-columns: ${props => props.gridTemplateColumns == null ? \"repeat(12, 1fr)\" : props.gridTemplateColumns};\r\n    grid-gap: 15px;\r\n    max-width: 80em;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    padding: 15px;\r\n`;","import { CSSTransition } from \"react-transition-group\";\r\nimport React from \"react\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\n\r\ninterface IProps extends CSSTransitionProps {\r\n  children: JSX.Element[];\r\n}\r\n\r\nexport const TransitionApplier = ({ children, ...props }: IProps) =>\r\n  <>\r\n    {children.map((child, index) =>\r\n      <CSSTransition\r\n        key={index}\r\n        {...props}\r\n      >\r\n        {child}\r\n      </CSSTransition>\r\n    )}\r\n  </>","import styled from \"styled-components\";\r\n\r\nexport const Fade = styled.div`\r\n  opacity: 0;\r\n\r\n  &.fade-enter-done {\r\n    opacity: 1;\r\n    transition: opacity 200ms ease-in;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-done {\r\n    opacity: 0;\r\n    transition: opacity 100ms ease-out;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  margin: 30px 0;\r\n  p {\r\n    margin: 0 0 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Contact: React.FC = () =>\r\n    <Article>\r\n        <Title>Contact</Title>\r\n        <p>Feel free to contact me through e-mail (<a href=\"mailto:gmurayama@outlook.com\">gmurayama@outlook.com</a>) or any other social media listed aside!</p>\r\n    </Article>","import styled from 'styled-components';\r\n\r\nexport const Card = styled.section`\r\n  border: 1px solid #CCC;\r\n  border-radius: 3px;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IProps extends React.HTMLAttributes<HTMLElement> {\r\n  title?: string;\r\n  subtitle?: string;\r\n}\r\n\r\nexport const CardSubtitle = styled.h4`\r\n  margin-top: 0;\r\n  color: #686868;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px;\r\n`;\r\n\r\nexport const CardHeader = (props: IProps) => {\r\n  const { title, subtitle, ...headerProps } = props;\r\n\r\n  return (\r\n    <Header {...headerProps}>\r\n      {title && <CardTitle>{title}</CardTitle>}\r\n      {subtitle && <CardSubtitle>{subtitle}</CardSubtitle>}\r\n      {headerProps.children}\r\n    </Header>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport const CardFigure = styled.figure`\r\n  padding: 0;\r\n  margin: auto;\r\n  max-width: 100%;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardContent = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 15px;\r\n`;","import * as React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\ninterface IProps {\r\n  color?: string;\r\n}\r\n\r\nconst DashKeyframe = keyframes`\r\n  0% {\r\n    stroke-dasharray: 1, 200;\r\n    stroke-dashoffset: 0;\r\n  }\r\n  50% {\r\n    stroke-dasharray: 89, 200;\r\n    stroke-dashoffset: -35px;\r\n  }\r\n  100% {\r\n    stroke-dasharray: 89, 200;\r\n    stroke-dashoffset: -124px;\r\n  }\r\n`;\r\n\r\nconst RotateKeyframe = keyframes`\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 25px;\r\n  &:before {\r\n    content: '';\r\n    display: block;\r\n    padding-top: 100%;\r\n  }\r\n`;\r\n\r\nconst SvgCircular = styled.svg`\r\n  animation: ${RotateKeyframe} 2s linear infinite;\r\n  height: 100%;\r\n  transform-origin: center center;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n`;\r\n\r\nconst CirclePath = styled.circle<IProps>`\r\n  stroke-dasharray: 1, 200;\r\n  stroke-dashoffset: 0;\r\n  animation: ${DashKeyframe} 1.5s ease-in-out infinite;\r\n  stroke: ${props => props.color};\r\n  stroke-linecap: round;\r\n`;\r\n\r\n/**\r\n * LoadingIcon\r\n */\r\n/** @component */\r\nexport const LoadingIcon = ({ color = \"#2274A5\" }: IProps) => (\r\n  <Loader>\r\n    <SvgCircular\r\n      viewBox=\"25 25 50 50\"\r\n    >\r\n      <CirclePath\r\n        color={color}\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        strokeWidth=\"5\"\r\n        strokeMiterlimit=\"10\"\r\n      />\r\n    </SvgCircular>\r\n  </Loader>\r\n);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Axios from 'axios';\r\nimport { Card, CardHeader, CardTitle, CardSubtitle } from './components/Card';\r\nimport { Container } from './components/Container';\r\nimport { LoadingIcon } from './components/LoadingIcon';\r\n\r\ninterface IState {\r\n  repositories: IRepository[];\r\n}\r\n\r\ninterface IRepository {\r\n  id: number;\r\n  name: string;\r\n  html_url: string;\r\n  description: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  pushed_at: string;\r\n}\r\n\r\nconst Article = styled.article`\r\n  margin: 30px 0;\r\n  p {\r\n    margin: 0 0 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 15px;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledCardTitle = styled(CardTitle)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledContainer = styled(Container)`\r\n  padding: 0;\r\n`;\r\n\r\nexport class Projects extends React.Component<{}, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { repositories: [] };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const response = await Axios.get<IRepository[]>('https://api.github.com/users/gmurayama/repos');\r\n    const repositories = response.data;\r\n\r\n    this.setState({ repositories });\r\n  }\r\n\r\n  render = () =>\r\n    <Article>\r\n      <Title>Projects</Title>\r\n      {this.state.repositories.length === 0 && <LoadingIcon />}\r\n\r\n      <StyledContainer gridTemplateColumns=\"repeat(3, 2fr)\">\r\n        {this.state.repositories.map((repository) =>\r\n          <Card key={repository.id}>\r\n            <CardHeader>\r\n              <StyledCardTitle>{repository.name}</StyledCardTitle>\r\n              <CardSubtitle as=\"p\">{repository.description}</CardSubtitle>\r\n            </CardHeader>\r\n          </Card>\r\n        )}\r\n      </StyledContainer>\r\n    </Article>\r\n}","import styled from \"styled-components\";\r\n\r\n\r\nexport const IconMenu = styled.ul`\r\n  border-right: 1px solid #d1d5de;\r\n  padding: 0 10px 0 0;\r\n  margin: 0 6px 0 0;\r\n\r\n  & li span {\r\n    font-size: 20px;\r\n    vertical-align: text-bottom;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n  text-align: right;\r\n\r\n  & ul {\r\n    list-style: none;\r\n    display: inline-block;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  & ul li {\r\n    padding: 12px;\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\ninterface ILinkProps extends LinkProps {\r\n  isActived?: boolean;\r\n}\r\n\r\nexport const NavLink = styled(Link)<ILinkProps>`\r\n    position: relative;\r\n\r\n    &:hover:after { transform: scaleX(1); }\r\n\r\n    &::after {\r\n      position: absolute;\r\n      display: block;\r\n      bottom: -3px;\r\n      left: 0;\r\n      right: -1px;\r\n      content: '';\r\n      border-bottom: solid 2px #2274a5;\r\n      transform: scaleX(0);\r\n      transition: transform 200ms ease-in-out;\r\n      transform-origin: 0% 50%;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const TextMenu = styled.ul`\r\n  text-align: left;\r\n  padding: 0;\r\n  margin: 0;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, Switch, RouteComponentProps } from \"react-router-dom\";\r\nimport { About } from './About';\r\nimport { Container } from './components/Container/Container';\r\nimport { TransitionApplier } from './components/Transitions/TransitionApplier';\r\nimport './assets/icons.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Fade } from './components/Transitions/Fade';\r\nimport { Contact } from './Contact';\r\nimport { Projects } from './Projects';\r\nimport { Nav, IconMenu, TextMenu, NavLink } from './components/Menu';\r\n\r\ninterface IState {\r\n  showContent: boolean;\r\n  resizePresentation: boolean;\r\n  lastEventTargetClicked?: EventTarget;\r\n}\r\n\r\nconst StyledContainer = styled(Container)`\r\n  margin-top: 12.5%;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-weight: 300;\r\n  margin: 0 0 6px;\r\n  font-size: 44px;\r\n\r\n  &.change-font-size-enter-done {\r\n    font-size: 28px;\r\n    transition: font-size 200ms ease-in-out;\r\n  }\r\n\r\n  &.change-font-size-exit {\r\n    font-size: 28px;\r\n  }\r\n\r\n  &.change-font-size-exit-done {\r\n    font-size: 44px;\r\n    transition: font-size 200ms ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Profession = styled.h2`\r\n  font-size: 26px;\r\n  font-weight: 300;\r\n  margin: 0 0 4px 1px;\r\n  position: relative;\r\n  padding-bottom: 6px;\r\n  transition: font-size 200ms ease-in-out;\r\n\r\n  &.change-font-size-enter-done {\r\n    font-size: 20px;\r\n    transition: font-size 180ms ease-in-out;\r\n  }\r\n\r\n  &.change-font-size-exit {\r\n    font-size: 20px;\r\n  }\r\n\r\n  &.change-font-size-exit-done {\r\n    font-size: 26px;\r\n    transition: font-size 180ms ease-in-out;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    border-bottom: 1px solid #d1d5de;\r\n    width: 520px;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Presentation = styled.article`\r\n  width: 100%;\r\n  position: relative;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nclass App extends React.Component<{}, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showContent: false,\r\n      resizePresentation: false,\r\n      lastEventTargetClicked: undefined\r\n    };\r\n  }\r\n\r\n  changeContent = (e: React.SyntheticEvent<EventTarget>) => {\r\n    const eventTarget = e.target;\r\n    const closeContent = this.state.showContent && this.state.lastEventTargetClicked === eventTarget;\r\n\r\n    this.setState((prevState) =>\r\n      ({ showContent: !prevState.showContent, lastEventTargetClicked: eventTarget }),\r\n      () => { this.setState({ showContent: !closeContent, resizePresentation: !closeContent }); }\r\n    );\r\n  }\r\n\r\n  render = () =>\r\n    <StyledContainer gridTemplateColumns=\"10fr 3fr\">\r\n      <Router>\r\n        <Presentation>\r\n          <TransitionApplier\r\n            in={this.state.resizePresentation}\r\n            timeout={0}\r\n            classNames=\"change-font-size\"\r\n          >\r\n            <Name>Gustavo Murayama</Name>\r\n            <Profession>Software Developer</Profession>\r\n          </TransitionApplier>\r\n\r\n          <CSSTransition\r\n            in={this.state.showContent}\r\n            timeout={{ enter: 100, exit: 0 }}\r\n            classNames=\"fade\"\r\n          >\r\n            <Fade>\r\n              <Switch>\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n                <Route path=\"/projects\" component={Projects} />\r\n              </Switch>\r\n            </Fade>\r\n          </CSSTransition>\r\n        </Presentation>\r\n\r\n        <Nav>\r\n          <IconMenu>\r\n            <li>\r\n              <a href=\"https://www.linkedin.com/in/gmurayama\" target=\"_blank\">\r\n                <span className=\"icon-linkedin\"></span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/gmurayama\" target=\"_blank\">\r\n                <span className=\"icon-github\"></span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"mailto:gmurayama@outlook.com\">\r\n                <span className=\"icon-email\"></span>\r\n              </a>\r\n            </li>\r\n          </IconMenu>\r\n          <TextMenu>\r\n            <li><NavLink to=\"/about\" onClick={this.changeContent}>About me</NavLink></li>\r\n            <li><NavLink to=\"/projects\" onClick={this.changeContent}>Projects</NavLink></li>\r\n            <li><NavLink to=\"/contact\" onClick={this.changeContent}>Contact</NavLink></li>\r\n          </TextMenu>\r\n        </Nav>\r\n      </Router>\r\n    </StyledContainer>;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}