{"version":3,"sources":["About.tsx","components/Container.tsx","components/TransitionApplier.tsx","components/Fade.tsx","Contact.tsx","components/Sidemenu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Article","styled","article","_templateObject","Title","h2","_templateObject2","About","react_default","a","createElement","Container","div","Container_templateObject","props","gridTemplateColumns","TransitionApplier","_ref","children","Object","objectWithoutProperties","Fragment","map","child","index","CSSTransition","assign","key","Fade","Fade_templateObject","Contact_templateObject","Contact_templateObject2","Contact","Contact_Article","Contact_Title","href","Menu","nav","Sidemenu_templateObject","Socials","ul","Sidemenu_templateObject2","NavItems","_templateObject3","NavLink","Link","_templateObject4","StyledContainer","App_templateObject","Name","h1","App_templateObject2","Profession","App_templateObject3","Presentation","App_templateObject4","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeContent","e","eventTarget","target","closeContent","state","showContent","lastEventTargetClicked","setState","prevState","resizePresentation","render","react_router_dom","TransitionApplier_TransitionApplier","in","timeout","classNames","enter","exit","react_router","path","component","className","to","onClick","undefined","React","Component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62448e9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  margin: 30px 0;\r\n  p {\r\n    margin: 0 0 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const About: React.FC = () =>\r\n    <Article>\r\n        <Title>About</Title>\r\n        <p>I'm a Software Developer currently working mainly with .NET tecnologies, focused in web based solutions.</p>\r\n    </Article>","import styled from 'styled-components';\r\n\r\ninterface IProps extends React.HTMLAttributes<any> {\r\n    gridTemplateColumns?: string;\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n    display: grid;\r\n    grid-template-columns: ${props => props.gridTemplateColumns == null ? \"repeat(12, 1fr)\" : props.gridTemplateColumns};\r\n    grid-gap: 15px;\r\n    max-width: 80em;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    padding: 15px;\r\n`;","import { CSSTransition } from \"react-transition-group\";\r\nimport React from \"react\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\n\r\ninterface IProps extends CSSTransitionProps {\r\n  children: JSX.Element[];\r\n}\r\n\r\nexport const TransitionApplier = ({ children, ...props }: IProps) =>\r\n  <>\r\n    {children.map((child, index) =>\r\n      <CSSTransition\r\n        key={index}\r\n        {...props}\r\n      >\r\n        {child}\r\n      </CSSTransition>\r\n    )}\r\n  </>","import styled from \"styled-components\";\r\n\r\nexport const Fade = styled.div`\r\n  opacity: 0;\r\n\r\n  &.fade-enter-done {\r\n    opacity: 1;\r\n    transition: opacity 200ms ease-in;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-done {\r\n    opacity: 0;\r\n    transition: opacity 100ms ease-out;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  margin: 30px 0;\r\n  p {\r\n    margin: 0 0 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0 0 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Contact: React.FC = () =>\r\n    <Article>\r\n        <Title>Contact</Title>\r\n        <p>Feel free to contact me through e-mail (<a href=\"mailto:gmurayama@outlook.com\">gmurayama@outlook.com</a>) or any other social media listed aside!</p>\r\n    </Article>","import styled from \"styled-components\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\ninterface ILinkProps extends LinkProps {\r\n  isActived?: boolean;\r\n}\r\n\r\nexport const Menu = styled.nav`\r\n  text-align: right;\r\n\r\n  & ul {\r\n    list-style: none;\r\n    display: inline-block;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  & ul li {\r\n    padding: 12px;\r\n  }\r\n`;\r\n\r\nexport const Socials = styled.ul`\r\n  border-right: 1px solid #d1d5de;\r\n  padding: 0 10px 0 0;\r\n  margin: 0 6px 0 0;\r\n\r\n  & li span {\r\n    font-size: 20px;\r\n    vertical-align: text-bottom;\r\n  }\r\n`;\r\n\r\nexport const NavItems = styled.ul`\r\n  text-align: left;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nexport const NavLink = styled(Link) <ILinkProps>`\r\n    position: relative;\r\n\r\n    &:hover:after { transform: scaleX(1); }\r\n\r\n    &::after {\r\n      position: absolute;\r\n      display: block;\r\n      bottom: -3px;\r\n      left: 0;\r\n      right: -1px;\r\n      content: '';\r\n      border-bottom: solid 2px #2274a5;\r\n      transform: scaleX(0);\r\n      transition: transform 200ms ease-in-out;\r\n      transform-origin: 0% 50%;\r\n    }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { About } from './About';\r\nimport { Container } from './components/Container';\r\nimport { TransitionApplier } from './components/TransitionApplier';\r\nimport './assets/icons.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Fade } from './components/Fade';\r\nimport { Contact } from './Contact';\r\nimport { Menu, Socials, NavItems, NavLink } from './components/Sidemenu';\r\n\r\ninterface IState {\r\n  showContent: boolean;\r\n  resizePresentation: boolean;\r\n  lastEventTargetClicked?: EventTarget;\r\n}\r\n\r\nconst StyledContainer = styled(Container)`\r\n  margin-top: 12.5%;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-weight: 300;\r\n  margin: 0 0 6px;\r\n  font-size: 44px;\r\n\r\n  &.change-font-size-enter-done {\r\n    font-size: 24px;\r\n    transition: font-size 200ms ease-in-out;\r\n  }\r\n\r\n  &.change-font-size-exit {\r\n    font-size: 24px;\r\n  }\r\n\r\n  &.change-font-size-exit-done {\r\n    font-size: 44px;\r\n    transition: font-size 200ms ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Profession = styled.h2`\r\n  font-size: 26px;\r\n  font-weight: 300;\r\n  margin: 0 0 4px 1px;\r\n  position: relative;\r\n  padding-bottom: 6px;\r\n  transition: font-size 200ms ease-in-out;\r\n\r\n  &.change-font-size-enter-done {\r\n    font-size: 18px;\r\n    transition: font-size 180ms ease-in-out;\r\n  }\r\n\r\n  &.change-font-size-exit {\r\n    font-size: 18px;\r\n  }\r\n\r\n  &.change-font-size-exit-done {\r\n    font-size: 26px;\r\n    transition: font-size 180ms ease-in-out;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    border-bottom: 1px solid #d1d5de;\r\n    width: 520px;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Presentation = styled.article`\r\n  width: 100%;\r\n  position: relative;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n`;\r\n\r\nclass App extends React.Component<{}, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showContent: false,\r\n      resizePresentation: false,\r\n      lastEventTargetClicked: undefined\r\n    };\r\n  }\r\n\r\n  changeContent = (e: React.SyntheticEvent<EventTarget>) => {\r\n    const eventTarget = e.target;\r\n    const closeContent = this.state.showContent && this.state.lastEventTargetClicked === eventTarget;\r\n\r\n    this.setState((prevState) =>\r\n      ({ showContent: !prevState.showContent, resizePresentation: prevState.resizePresentation, lastEventTargetClicked: eventTarget }),\r\n      () => { this.setState({ showContent: !closeContent, resizePresentation: !closeContent }); }\r\n    );\r\n  }\r\n\r\n  render = () =>\r\n    <StyledContainer gridTemplateColumns=\"10fr 3fr\">\r\n      <Router>\r\n        <Presentation>\r\n          <TransitionApplier\r\n            in={this.state.resizePresentation}\r\n            timeout={0}\r\n            classNames=\"change-font-size\"\r\n          >\r\n            <Name>Gustavo Murayama</Name>\r\n            <Profession>Software Developer</Profession>\r\n          </TransitionApplier>\r\n\r\n          <CSSTransition\r\n            in={this.state.showContent}\r\n            timeout={ { enter: 100, exit: 0 }}\r\n            classNames=\"fade\"\r\n          >\r\n            <Fade>\r\n              <Switch>\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n              </Switch>\r\n            </Fade>\r\n          </CSSTransition>\r\n        </Presentation>\r\n\r\n        <Menu>\r\n          <Socials>\r\n            <li>\r\n              <a href=\"https://www.linkedin.com/in/gmurayama\" target=\"_blank\">\r\n                <span className=\"icon-linkedin\"></span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/gmurayama\" target=\"_blank\">\r\n                <span className=\"icon-github\"></span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"mailto:gmurayama@outlook.com\">\r\n                <span className=\"icon-email\"></span>\r\n              </a>\r\n            </li>\r\n          </Socials>\r\n          <NavItems>\r\n            <li><NavLink to=\"/about\" onClick={this.changeContent}>About me</NavLink></li>\r\n            <li><NavLink to=\"/projects\" >Projects</NavLink></li>\r\n            <li><NavLink to=\"/contact\" onClick={this.changeContent}>Contact</NavLink></li>\r\n          </NavItems>\r\n        </Menu>\r\n      </Router>\r\n    </StyledContainer>;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}